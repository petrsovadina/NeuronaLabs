name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: neuronalabs_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    # Backend Tests
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
    
    - name: Restore backend dependencies
      run: dotnet restore
      working-directory: ./backend
    
    - name: Build backend
      run: dotnet build --no-restore
      working-directory: ./backend
    
    - name: Run backend tests
      run: dotnet test --no-build --verbosity normal
      working-directory: ./backend
      env:
        ConnectionStrings__DefaultConnection: "Host=localhost;Database=neuronalabs_test;Username=postgres;Password=postgres"

    # Frontend Tests
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        
    - name: Install frontend dependencies
      run: npm ci
      working-directory: ./frontend
    
    - name: Run frontend tests
      run: npm test
      working-directory: ./frontend

    # Security Scan
    - name: Run security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2

    # Build and push Docker images
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push backend
      uses: docker/build-push-action@v2
      with:
        context: ./backend
        file: ./docker/backend/Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/neuronalabs-backend:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/neuronalabs-backend:${{ github.sha }}
    
    - name: Build and push frontend
      uses: docker/build-push-action@v2
      with:
        context: ./frontend
        file: ./docker/frontend/Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/neuronalabs-frontend:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/neuronalabs-frontend:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
    
    # Deploy to production
    - name: Deploy to production
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PROD_HOST }}
        username: ${{ secrets.PROD_USERNAME }}
        key: ${{ secrets.PROD_SSH_KEY }}
        script: |
          cd /opt/neuronalabs
          docker-compose pull
          docker-compose up -d
          docker system prune -f
