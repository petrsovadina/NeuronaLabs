name: NeuronaLabs CI/CD Pipeline

on:
  push:
    branches: 
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

env:
  DOTNET_VERSION: '8.0.x'
  PROJECT_PATH: 'backend/NeuronaLabs.csproj'
  TEST_PROJECT_PATH: 'tests/NeuronaLabs.Tests/NeuronaLabs.Tests.csproj'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore Dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}
    
    - name: Build Project
      run: dotnet build ${{ env.PROJECT_PATH }} -c Release --no-restore
    
    - name: Run Unit Tests
      run: dotnet test ${{ env.TEST_PROJECT_PATH }} -c Release --no-build --verbosity normal
    
    - name: Run Integration Tests
      run: dotnet test ${{ env.TEST_PROJECT_PATH }} -c Release --filter "Category=Integration"

  docker-build:
    name: Build Docker Image
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Build Docker Image
      run: docker build -t neuronalabs-backend:${{ github.sha }} -f backend/Dockerfile .
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Push Docker Image
      run: |
        docker tag neuronalabs-backend:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/neuronalabs-backend:${{ github.sha }}
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/neuronalabs-backend:${{ github.sha }}

  deploy:
    name: Deploy to Production
    needs: docker-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to Production Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PRODUCTION_HOST }}
        username: ${{ secrets.PRODUCTION_USERNAME }}
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        script: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/neuronalabs-backend:${{ github.sha }}
          docker stop neuronalabs-backend || true
          docker rm neuronalabs-backend || true
          docker run -d --name neuronalabs-backend \
            -p 5000:5000 \
            -e ASPNETCORE_ENVIRONMENT=Production \
            ${{ secrets.DOCKERHUB_USERNAME }}/neuronalabs-backend:${{ github.sha }}

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'table'
        exit-code: '1'
        severity: 'CRITICAL,HIGH'

  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v2
      with:
        languages: 'csharp'
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
