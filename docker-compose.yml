services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: ../docker/backend/Dockerfile
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Production}
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__DefaultConnection=Host=db;Database=${POSTGRES_DB:-neuronalabs};Username=${POSTGRES_USER:-postgres};Password=${POSTGRES_PASSWORD:-neurona123}
      - JWT__Secret=${JWT_SECRET:-neuronalabs-dev-secret}
      - JWT__ValidIssuer=${JWT_ISSUER:-https://neuronalabs.com}
      - JWT__ValidAudience=${JWT_AUDIENCE:-https://neuronalabs.com}
      - CORS__AllowedOrigins=${CORS_ORIGINS:-http://localhost:3000}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - neuronalabs-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/frontend/Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=${API_URL:-http://localhost:5000}
        - NEXT_PUBLIC_GRAPHQL_URL=${API_URL:-http://localhost:5000}/graphql
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - neuronalabs-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # PostgreSQL Database
  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-neuronalabs}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-neurona123}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backend/Database/Init:/docker-entrypoint-initdb.d
    networks:
      - neuronalabs-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-neuronalabs}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres-data:
    driver: local

networks:
  neuronalabs-network:
    driver: bridge
    name: neuronalabs-network
